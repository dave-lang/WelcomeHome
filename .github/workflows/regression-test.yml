name: Take screenshots

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  shot-scraper:
    runs-on: ubuntu-latest
    if: ${{ !github.event.repository.is_template }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        cache: 'npm'
        node-version: 20
  
    - run: npm install

    - uses: actions/cache@v4
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright/
        key: ${{ runner.os }}-browsers

    - name: Install dependencies
      run: |
        mv .github/requirements.txt ..
        pip install -r requirements.txt

    - name: Install Playwright dependencies
      run: |
        shot-scraper install

    - name: Take shots
      run: |
        npx parcel src/index.html &
        sleep 5
        shot-scraper multi shots.yml

    - name: Export artifact
      id: artifact-upload
      uses: actions/upload-artifact@v4
      with:
        retention-days: 30
        name: Landing
        path: screens/1-landing.png
    
    - name: Export artifact
      id: artifact-upload-2
      uses: actions/upload-artifact@v4
      with:
        retention-days: 30
        name: Details
        path: screens/2-details.png

    - name: Comment on PR with report link
      if: github.event_name == 'pull_request'
      uses: thollander/actions-comment-pull-request@v3
      with:
        comment-tag: screenshots
        message: |
          ### Screenshots generated
          ![Landing](${{ steps.artifact-upload.outputs.artifact-url }})
          ![Details](${{ steps.artifact-upload-2.outputs.artifact-url }})